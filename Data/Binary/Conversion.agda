{-# OPTIONS --without-K --safe #-}

module Data.Binary.Conversion where

open import Data.Binary.Definition
open import Data.Binary.Increment

open import Agda.Builtin.Nat using (Nat; suc; zero)
import Agda.Builtin.Nat as РёЋ

РЪд_РЄЉРЪД : Nat Рєњ ­Юћ╣
РЪд zero  РЄЉРЪД = 0рхЄ
РЪд suc n РЄЉРЪД = inc РЪд n РЄЉРЪД

РЪд_РЄЊРЪД : ­Юћ╣ Рєњ Nat
РЪд 0рхЄ РЄЊРЪД = 0
РЪд 1рхЄ xs РЄЊРЪД = 1 РёЋ.+ РЪд xs РЄЊРЪД РёЋ.* 2
РЪд 2рхЄ xs РЄЊРЪД = 2 РёЋ.+ РЪд xs РЄЊРЪД РёЋ.* 2
