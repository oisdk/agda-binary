module Data.Binary.Addition where

open import Data.Binary.Definition
open import Data.Binary.Increment

1+[_+_] : ๐น โ ๐น โ ๐น
2+[_+_] : ๐น โ ๐น โ ๐น

1+[ 0แต    + ys    ] = inc ys
1+[ 1แต xs + 0แต    ] = 2แต xs
1+[ 2แต xs + 0แต    ] = 1แต inc xs
1+[ 1แต xs + 1แต ys ] = 1แต 1+[ xs + ys ]
1+[ 1แต xs + 2แต ys ] = 2แต 1+[ xs + ys ]
1+[ 2แต xs + 1แต ys ] = 2แต 1+[ xs + ys ]
1+[ 2แต xs + 2แต ys ] = 1แต 2+[ xs + ys ]

2+[ 0แต    + 0แต    ] = 2แต 0แต
2+[ 0แต    + 1แต ys ] = 1แต inc ys
2+[ 0แต    + 2แต ys ] = 2แต inc ys
2+[ 1แต xs + 0แต    ] = 1แต inc xs
2+[ 2แต xs + 0แต    ] = 2แต inc xs
2+[ 1แต xs + 1แต ys ] = 2แต 1+[ xs + ys ]
2+[ 1แต xs + 2แต ys ] = 1แต 2+[ xs + ys ]
2+[ 2แต xs + 1แต ys ] = 1แต 2+[ xs + ys ]
2+[ 2แต xs + 2แต ys ] = 2แต 2+[ xs + ys ]

infixl 6 _+_
_+_ : ๐น โ ๐น โ ๐น
0แต    + ys    = ys
1แต xs + 0แต    = 1แต xs
2แต xs + 0แต    = 2แต xs
1แต xs + 1แต ys = 2แต (xs + ys)
1แต xs + 2แต ys = 1แต 1+[ xs + ys ]
2แต xs + 1แต ys = 1แต 1+[ xs + ys ]
2แต xs + 2แต ys = 2แต 1+[ xs + ys ]
