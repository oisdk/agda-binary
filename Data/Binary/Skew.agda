{-# OPTIONS --without-K --safe #-}

module Data.Binary.Skew where

open import Data.List as List using (List; _โท_; [])
open import Data.Nat as โ using (โ; suc; zero)
open import Data.Product

๐น : Set
๐น = List โ

๐นโบ : Set
๐นโบ = โ ร ๐น

inc : ๐น โ ๐นโบ
inc [] = 0 , []
inc (x โท []) = 0 , x โท []
inc (xโ โท zero โท xs) = suc xโ , xs
inc (xโ โท suc xโ โท xs) = 0 , xโ โท xโ โท xs

dec : ๐นโบ โ ๐น
dec (suc x , xs) = x โท 0 โท xs
dec (zero , []) = []
dec (zero , x โท []) = x โท []
dec (zero , xโ โท xโ โท xs) = xโ โท suc xโ โท xs
