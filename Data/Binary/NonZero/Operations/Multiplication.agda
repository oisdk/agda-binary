{-# OPTIONS --without-K --safe #-}

module Data.Binary.NonZero.Operations.Multiplication where

open import Data.Binary.NonZero.Definitions
open import Data.Binary.NonZero.Operations.Addition

mutual
  mulโบ : Bit โบ โ ๐นโบ โ Bit โบ
  mulโบ (O & xs) ys = O & mul xs ys
  mulโบ (I & xs) 1โบ = I & xs
  mulโบ (I & xs) (โน ys) = head ys & โน addโโบ (mulโบ ys xs) (tail ys)

  mul : ๐นโบ โ ๐นโบ โ ๐นโบ
  mul [] ys = ys
  mul (โน xs) ys = โน mulโบ xs ys

_*_ :  ๐น โ ๐น โ ๐น
0แต * ys = 0แต
(0< xs) * 0แต = 0แต
(0< xs) * (0< ys) = 0< mul xs ys
