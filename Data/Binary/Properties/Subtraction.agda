{-# OPTIONS --cubical #-}

module Data.Binary.Properties.Subtraction where

open import Data.Binary.Definition
open import Data.Binary.Addition
open import Data.Binary.Properties.Addition using (+-cong)
open import Data.Binary.Multiplication
open import Data.Binary.Conversion
import Agda.Builtin.Nat as РёЋ

open import Data.Binary.Properties.Isomorphism

open import Data.Binary.Helpers
open import Data.Binary.Properties.Helpers
open import Data.Binary.Properties.Double
open import Data.Binary.Double
open import Data.Binary.Subtraction

_-Рђ▓_ : РёЋ Рєњ РёЋ Рєњ Maybe РёЋ
n     -Рђ▓ zero  = just n
zero  -Рђ▓ suc _ = nothing
suc n -Рђ▓ suc m = n -Рђ▓ m

1рхЄРёЋ : РёЋ Рєњ РёЋ
1рхЄРёЋ n = suc (n РёЋ.* 2)

-Рђ▓Рђ┐cong : Рѕђ n m Рєњ from-maybe 0 (n -Рђ▓ m) РЅА n РёЋ.- m
-Рђ▓Рђ┐cong n zero    = refl
-Рђ▓Рђ┐cong zero (suc m) = refl
-Рђ▓Рђ┐cong (suc n) (suc m) = -Рђ▓Рђ┐cong n m

РЪд_РЄЊРЪДРђ▓ : Maybe ­Юћ╣ Рєњ Maybe РёЋ
РЪд_РЄЊРЪДРђ▓ = map-maybe РЪд_РЄЊРЪД

exp2 : РёЋ Рєњ РёЋ Рєњ РёЋ
exp2 zero    x = x
exp2 (suc n) x = exp2 n x РёЋ.* 2

exp2-­Юћ╣ : РёЋ Рєњ ­Юћ╣ Рєњ ­Юћ╣
exp2-­Юћ╣ zero    xs = xs
exp2-­Юћ╣ (suc n) xs = exp2-­Юћ╣ n (2├Ќ xs)

exp2-­Юћ╣-0рхЄ : Рѕђ n Рєњ exp2-­Юћ╣ n 0рхЄ РЅА 0рхЄ
exp2-­Юћ╣-0рхЄ zero = refl
exp2-­Юћ╣-0рхЄ (suc n) = exp2-­Юћ╣-0рхЄ n

exp2-­Юћ╣-2рхЄ : Рѕђ n xs Рєњ exp2-­Юћ╣ n (2рхЄ xs) РЅА xs +1├Ќ2^suc n
exp2-­Юћ╣-2рхЄ zero 0рхЄ = refl
exp2-­Юћ╣-2рхЄ zero (1рхЄ xs) = refl
exp2-­Юћ╣-2рхЄ zero (2рхЄ xs) = refl
exp2-­Юћ╣-2рхЄ (suc n) xs = exp2-­Юћ╣-2рхЄ n (1рхЄ xs)

exp2-­Юћ╣-├Ќ2^suc : Рѕђ n xs Рєњ exp2-­Юћ╣ (suc n) xs РЅА xs ├Ќ2^suc n
exp2-­Юћ╣-├Ќ2^suc n 0рхЄ      = exp2-­Юћ╣-0рхЄ n
exp2-­Юћ╣-├Ќ2^suc n (1рхЄ xs) = exp2-­Юћ╣-2рхЄ n (2├Ќ xs)
exp2-­Юћ╣-├Ќ2^suc n (2рхЄ xs) = exp2-­Юћ╣-2рхЄ n (1рхЄ xs)

exp2-assoc : Рѕђ n m Рєњ exp2 n (m РёЋ.* 2) РЅА exp2 n m РёЋ.* 2
exp2-assoc zero m = refl
exp2-assoc (suc n) m = cong (РёЋ._* 2) (exp2-assoc n m)

exp2-­Юћ╣-cong : Рѕђ n xs Рєњ РЪд exp2-­Юћ╣ n xs РЄЊРЪД РЅА exp2 n РЪд xs РЄЊРЪД
exp2-­Юћ╣-cong zero xs = refl
exp2-­Юћ╣-cong (suc n) xs = exp2-­Юћ╣-cong n (2├Ќ xs) РѕЎ cong (exp2 n) (double-cong xs) РѕЎ exp2-assoc n РЪд xs РЄЊРЪД

├Ќ2^suc-cong : Рѕђ n xs Рєњ РЪд xs ├Ќ2^suc n РЄЊРЪД РЅА exp2 (suc n) РЪд xs РЄЊРЪД
├Ќ2^suc-cong n xs = cong РЪд_РЄЊРЪД (sym (exp2-­Юћ╣-├Ќ2^suc n xs)) РѕЎ exp2-­Юћ╣-cong (suc n) xs

maybe-fuse : {A B C : Set} (c : B Рєњ C) (f : A Рєњ B) (b : B) (x : Maybe A)
           Рєњ c (maybe f b x) РЅА maybe (c Рѕў f) (c b) x
maybe-fuse _ _ _ nothing  = refl
maybe-fuse _ _ _ (just _) = refl

map-maybe-comp : {A B C : Set} (f : A Рєњ B) (b : B) (g : C Рєњ A) (x : Maybe C) Рєњ maybe f b (map-maybe g x) РЅА maybe (f Рѕў g) b x
map-maybe-comp f b g = maybe-fuse (maybe f b) _ _

1рхЄz-lemma : Рѕђ n Рєњ РЪд map-maybe 1рхЄ_ n РЄЊРЪДРђ▓ РЅА map-maybe 1рхЄРёЋ (map-maybe РЪд_РЄЊРЪД n)
1рхЄz-lemma nothing  = refl
1рхЄz-lemma (just x) = refl

1рхЄzs-distribРђ┐-Рђ▓ : Рѕђ x y Рєњ map-maybe 1рхЄРёЋ (x -Рђ▓ suc y) РЅА  (x РёЋ.* 2) -Рђ▓ suc (y РёЋ.* 2)
1рхЄzs-distribРђ┐-Рђ▓ zero y = refl
1рхЄzs-distribРђ┐-Рђ▓ (suc x) zero = refl
1рхЄzs-distribРђ┐-Рђ▓ (suc x) (suc y) = 1рхЄzs-distribРђ┐-Рђ▓ x y

2рхЄzs-distribРђ┐-Рђ▓ : Рѕђ x y Рєњ map-maybe (РёЋ._* 2) (x -Рђ▓ suc y) РЅА  (x РёЋ.* 2) -Рђ▓ suc (suc (y РёЋ.* 2))
2рхЄzs-distribРђ┐-Рђ▓ zero y = refl
2рхЄzs-distribРђ┐-Рђ▓ (suc x) zero = refl
2рхЄzs-distribРђ┐-Рђ▓ (suc x) (suc y) = 2рхЄzs-distribРђ┐-Рђ▓ x y

1рхЄsz-distribРђ┐-Рђ▓ : Рѕђ x y Рєњ map-maybe 1рхЄРёЋ (x -Рђ▓ y) РЅА suc (x РёЋ.* 2) -Рђ▓ (y РёЋ.* 2)
1рхЄsz-distribРђ┐-Рђ▓ zero zero = refl
1рхЄsz-distribРђ┐-Рђ▓ zero (suc y) = refl
1рхЄsz-distribРђ┐-Рђ▓ (suc x) zero = refl
1рхЄsz-distribРђ┐-Рђ▓ (suc x) (suc y) = 1рхЄsz-distribРђ┐-Рђ▓ x y

+-congРђ┐-Рђ▓ : Рѕђ n x y Рєњ (n РёЋ.+ x) -Рђ▓ (n РёЋ.+ y) РЅА x -Рђ▓ y
+-congРђ┐-Рђ▓ zero x y = refl
+-congРђ┐-Рђ▓ (suc n) x y = +-congРђ┐-Рђ▓ n x y

*-distribРђ┐-Рђ▓ : Рѕђ n x y Рєњ map-maybe (РёЋ._* suc n) (x -Рђ▓ y) РЅА (x РёЋ.* suc n) -Рђ▓ (y РёЋ.* suc n)
*-distribРђ┐-Рђ▓ n zero zero = refl
*-distribРђ┐-Рђ▓ n zero (suc y) = refl
*-distribРђ┐-Рђ▓ n (suc x) zero = refl
*-distribРђ┐-Рђ▓ n (suc x) (suc y) = *-distribРђ┐-Рђ▓ n x y РѕЎ sym (+-congРђ┐-Рђ▓ n _ _)

-Рђ▓Рђ┐*2-suc : Рѕђ x y Рєњ map-maybe suc ((x РёЋ.* 2) -Рђ▓ (y РёЋ.* 2)) РЅА suc (x РёЋ.* 2) -Рђ▓ (y РёЋ.* 2)
-Рђ▓Рђ┐*2-suc zero zero = refl
-Рђ▓Рђ┐*2-suc zero (suc y) = refl
-Рђ▓Рђ┐*2-suc (suc x) zero = refl
-Рђ▓Рђ┐*2-suc (suc x) (suc y) = -Рђ▓Рђ┐*2-suc x y

-Рђ▓Рђ┐suc-*2 : Рѕђ x y Рєњ map-maybe (suc Рѕў (РёЋ._* 2)) (x -Рђ▓ suc y) РЅА (x РёЋ.* 2) -Рђ▓ suc (y РёЋ.* 2)
-Рђ▓Рђ┐suc-*2 zero zero = refl
-Рђ▓Рђ┐suc-*2 zero (suc y) = refl
-Рђ▓Рђ┐suc-*2 (suc x) zero = refl
-Рђ▓Рђ┐suc-*2 (suc x) (suc y) = -Рђ▓Рђ┐suc-*2 x y

+1├Ќ2^suc-cong : Рѕђ n xs Рєњ РЪд xs +1├Ќ2^suc n РЄЊРЪД РЅА exp2 (suc n) (suc РЪд xs РЄЊРЪД)
+1├Ќ2^suc-cong n xs = cong РЪд_РЄЊРЪД (sym (exp2-­Юћ╣-2рхЄ n xs)) РѕЎ exp2-­Юћ╣-cong n (2рхЄ xs) РѕЎ exp2-assoc n (suc РЪд xs РЄЊРЪД)

exp-suc-lemma : Рѕђ n xs ys Рєњ map-maybe (╬╗ x Рєњ exp2 n x РёЋ.* 2 РёЋ.* 2) (xs -Рђ▓ ys) РЅА
                  map-maybe (╬╗ x Рєњ exp2 n x РёЋ.* 2)
                  ((xs РёЋ.* 2) -Рђ▓ (ys РёЋ.* 2))
exp-suc-lemma n xs ys = cong (flip map-maybe (xs -Рђ▓ ys)) (funExt (╬╗ x Рєњ cong (РёЋ._* 2) (sym (exp2-assoc n x)))) РѕЎ sym (map-maybe-comp _ _ _ (xs -Рђ▓ ys)) РѕЎ cong (map-maybe (exp2 (suc n))) (*-distribРђ┐-Рђ▓ 1 xs ys)

subрхЅРѓЂ-0-cong : Рѕђ n xs ys Рєњ РЪд map-maybe (_+1├Ќ2^suc n) (subрхЅРѓЂ 0 xs ys) РЄЊРЪДРђ▓ РЅА map-maybe (exp2 (suc n)) ((РЪд xs РЄЊРЪД РёЋ.* 2) -Рђ▓ suc (РЪд ys РЄЊРЪД РёЋ.* 2))
subрхЅ-0-cong : Рѕђ n xs ys Рєњ РЪд map-maybe (_+1├Ќ2^suc n) (subрхЅ 0 xs ys) РЄЊРЪДРђ▓ РЅА map-maybe (exp2 (suc n)) (suc (РЪд xs РЄЊРЪД РёЋ.* 2) -Рђ▓ (РЪд ys РЄЊРЪД РёЋ.* 2))
subрхЅ-cong  : Рѕђ n xs ys Рєњ РЪд subрхЅ  n xs ys РЄЊРЪДРђ▓ РЅА map-maybe (exp2 (suc n)) (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД)
subрхЅРѓЂ-cong : Рѕђ n xs ys Рєњ РЪд subрхЅРѓЂ n xs ys РЄЊРЪДРђ▓ РЅА map-maybe (exp2 (suc n)) (РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД)
subРѓЂ-cong  : Рѕђ   xs ys Рєњ РЪд subРѓЂ xs ys РЄЊРЪДРђ▓ РЅА РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД
sub-cong   : Рѕђ   xs ys Рєњ РЪд sub xs ys РЄЊРЪДРђ▓ РЅА РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД

subрхЅРѓЂ-0-cong n xs ys =
  РЪд map-maybe (_+1├Ќ2^suc n) (subрхЅРѓЂ 0 xs ys) РЄЊРЪДРђ▓ РЅАРЪе map-maybe-comp _ _ _ (subрхЅРѓЂ 0 xs ys) РЪЕ
  map-maybe (РЪд_РЄЊРЪД Рѕў (_+1├Ќ2^suc n)) (subрхЅРѓЂ 0 xs ys) РЅАРЪе cong (flip map-maybe (subрхЅРѓЂ 0 xs ys)) (funExt (+1├Ќ2^suc-cong n)) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc Рѕў РЪд_РЄЊРЪД) (subрхЅРѓЂ 0 xs ys) РЅА╦ўРЪе map-maybe-comp _ _ _ (subрхЅРѓЂ 0 xs ys) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc) РЪд subрхЅРѓЂ 0 xs ys РЄЊРЪДРђ▓ РЅАРЪе cong (map-maybe (exp2 (suc n) Рѕў suc)) (subрхЅРѓЂ-cong 0 xs ys) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc) (map-maybe (exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД)) РЅАРЪе map-maybe-comp _ _ _ (РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc Рѕў exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД) РЅА╦ўРЪе map-maybe-comp _ _ _ (РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n)) (map-maybe (suc Рѕў exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ suc РЪд ys РЄЊРЪД)) РЅАРЪе cong (map-maybe (exp2 (suc n))) (-Рђ▓Рђ┐suc-*2 РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n)) ((РЪд xs РЄЊРЪД РёЋ.* 2) -Рђ▓ suc (РЪд ys РЄЊРЪД РёЋ.* 2)) Рѕј

subрхЅ-0-cong n xs ys =
  РЪд map-maybe (_+1├Ќ2^suc n) (subрхЅ 0 xs ys) РЄЊРЪДРђ▓ РЅАРЪе map-maybe-comp _ _ _ (subрхЅ 0 xs ys) РЪЕ
  map-maybe (РЪд_РЄЊРЪД Рѕў (_+1├Ќ2^suc n)) (subрхЅ 0 xs ys) РЅАРЪе cong (flip map-maybe (subрхЅ 0 xs ys)) (funExt (+1├Ќ2^suc-cong n)) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc Рѕў РЪд_РЄЊРЪД) (subрхЅ 0 xs ys) РЅА╦ўРЪе map-maybe-comp _ _ _ (subрхЅ 0 xs ys) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc) РЪд subрхЅ 0 xs ys РЄЊРЪДРђ▓ РЅАРЪе cong (map-maybe (exp2 (suc n) Рѕў suc)) (subрхЅ-cong 0 xs ys) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc) (map-maybe (exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД)) РЅАРЪе map-maybe-comp _ _ _ (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n) Рѕў suc Рѕў exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД) РЅА╦ўРЪе map-maybe-comp _ _ _ (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n)) (map-maybe (suc Рѕў exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД)) РЅА╦ўРЪе cong (map-maybe (exp2 (suc n))) (map-maybe-comp _ _ _ (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД)) РЪЕ
  map-maybe (exp2 (suc n)) (map-maybe suc (map-maybe (exp2 1) (РЪд xs РЄЊРЪД -Рђ▓ РЪд ys РЄЊРЪД))) РЅАРЪе cong (map-maybe (exp2 (suc n)) Рѕў map-maybe suc) (*-distribРђ┐-Рђ▓ 1 РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n)) (map-maybe suc (exp2 1 РЪд xs РЄЊРЪД -Рђ▓ exp2 1 РЪд ys РЄЊРЪД)) РЅАРЪе cong (map-maybe (exp2 (suc n))) (-Рђ▓Рђ┐*2-suc РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД) РЪЕ
  map-maybe (exp2 (suc n)) (suc (РЪд xs РЄЊРЪД РёЋ.* 2) -Рђ▓ (РЪд ys РЄЊРЪД РёЋ.* 2)) Рѕј

subрхЅ-cong n xs      0рхЄ      = cong just (├Ќ2^suc-cong n xs)
subрхЅ-cong n 0рхЄ      (1рхЄ ys) = refl
subрхЅ-cong n 0рхЄ      (2рхЄ ys) = refl
subрхЅ-cong n (1рхЄ xs) (1рхЄ ys) = subрхЅ-cong (suc n) xs ys РѕЎ exp-suc-lemma n РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
subрхЅ-cong n (1рхЄ xs) (2рхЄ ys) = subрхЅРѓЂ-0-cong n xs ys
subрхЅ-cong n (2рхЄ xs) (1рхЄ ys) = subрхЅ-0-cong n xs ys

subрхЅ-cong n (2рхЄ xs) (2рхЄ ys) = subрхЅ-cong (suc n) xs ys РѕЎ exp-suc-lemma n РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД

subрхЅРѓЂ-cong n 0рхЄ      _       = refl
subрхЅРѓЂ-cong n (1рхЄ xs) 0рхЄ      = cong just (├Ќ2^suc-cong (suc n) xs РѕЎ cong (РёЋ._* 2) (sym (exp2-assoc n РЪд xs РЄЊРЪД)))
subрхЅРѓЂ-cong n (1рхЄ xs) (1рхЄ ys) = subрхЅРѓЂ-0-cong n xs ys
subрхЅРѓЂ-cong n (1рхЄ xs) (2рхЄ ys) = subрхЅРѓЂ-cong (suc n) xs ys РѕЎ exp-suc-lemma n РЪд xs РЄЊРЪД (suc РЪд ys РЄЊРЪД)
subрхЅРѓЂ-cong n (2рхЄ xs) 0рхЄ      = cong just (+1├Ќ2^suc-cong n (2├Ќ xs) РѕЎ cong (╬╗ e Рєњ exp2 n (suc e) РёЋ.* 2) (double-cong xs))
subрхЅРѓЂ-cong n (2рхЄ xs) (1рхЄ ys) = subрхЅ-cong (suc n) xs ys РѕЎ exp-suc-lemma n РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
subрхЅРѓЂ-cong n (2рхЄ xs) (2рхЄ ys) = subрхЅРѓЂ-0-cong n xs ys

subРѓЂ-cong 0рхЄ      _       = refl
subРѓЂ-cong (1рхЄ xs) 0рхЄ      = cong just (double-cong xs)
subРѓЂ-cong (1рхЄ xs) (1рхЄ ys) = 1рхЄz-lemma (subРѓЂ xs ys) РѕЎ cong (map-maybe 1рхЄРёЋ) (subРѓЂ-cong xs ys) РѕЎ 1рхЄzs-distribРђ┐-Рђ▓ РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
subРѓЂ-cong (1рхЄ xs) (2рхЄ ys) = subрхЅРѓЂ-cong 0 xs ys РѕЎ 2рхЄzs-distribРђ┐-Рђ▓ РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
subРѓЂ-cong (2рхЄ xs) 0рхЄ      = refl
subРѓЂ-cong (2рхЄ xs) (1рхЄ ys) = subрхЅ-cong 0 xs ys РѕЎ *-distribРђ┐-Рђ▓ 1 РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
subРѓЂ-cong (2рхЄ xs) (2рхЄ ys) = 1рхЄz-lemma (subРѓЂ xs ys) РѕЎ cong (map-maybe 1рхЄРёЋ) (subРѓЂ-cong xs ys) РѕЎ 1рхЄzs-distribРђ┐-Рђ▓ РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД

sub-cong xs 0рхЄ           = refl
sub-cong 0рхЄ      (1рхЄ _)  = refl
sub-cong 0рхЄ      (2рхЄ _)  = refl
sub-cong (1рхЄ xs) (1рхЄ ys) = subрхЅ-cong 0 xs ys РѕЎ *-distribРђ┐-Рђ▓ 1 РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
sub-cong (2рхЄ xs) (2рхЄ ys) = subрхЅ-cong 0 xs ys РѕЎ *-distribРђ┐-Рђ▓ 1 РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
sub-cong (1рхЄ xs) (2рхЄ ys) = 1рхЄz-lemma (subРѓЂ xs ys) РѕЎ cong (map-maybe 1рхЄРёЋ) (subРѓЂ-cong xs ys) РѕЎ 1рхЄzs-distribРђ┐-Рђ▓ РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД
sub-cong (2рхЄ xs) (1рхЄ ys) = 1рхЄz-lemma (sub xs ys) РѕЎ cong (map-maybe 1рхЄРёЋ) (sub-cong xs ys) РѕЎ 1рхЄsz-distribРђ┐-Рђ▓ РЪд xs РЄЊРЪД РЪд ys РЄЊРЪД

-Рђ┐cong : Рѕђ xs ys Рєњ РЪд xs - ys РЄЊРЪД РЅА РЪд xs РЄЊРЪД РёЋ.- РЪд ys РЄЊРЪД
-Рђ┐cong x y = maybe-fuse РЪд_РЄЊРЪД _ _ (sub x y)
           РѕЎ sym (map-maybe-comp _ _ РЪд_РЄЊРЪД (sub x y))
           РѕЎ cong (from-maybe 0) (sub-cong x y)
           РѕЎ -Рђ▓Рђ┐cong РЪд x РЄЊРЪД РЪд y РЄЊРЪД
